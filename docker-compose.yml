version: '2'

services:
  lb:
    image: dockercloud/haproxy
    container_name: lb
    ports:
      - "80:80"
    environment:
      - ADDITIONAL_SERVICES=mydockerizedapp:web
      - DEBUG=True
      - DOCKER_TLS_VERIFY
      - DOCKER_HOST
      - DOCKER_CERT_PATH
    volumes:
      - $DOCKER_CERT_PATH:$DOCKER_CERT_PATH
    #   - APP_NAME=web
    #   - CONSUL_URL=192.168.99.129:8500
    #   - constraint:node==mhs-demo0
    depends_on:
      - web
    networks:
      - front-tier

  postgres:
    image: 'postgres:9.5'
    environment:
      POSTGRES_USER: 'my_dockerized_app'
      POSTGRES_PASSWORD: 'yourpassword'
    ports:
      - '5433:5433'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    networks:
      - back-tier
  redis:
    image: 'redis:3.2-alpine'
    command: redis-server --requirepass yourpassword
    ports:
      - '6379:6379'
    volumes:
      - 'redis:/var/lib/redis/data'
    networks:
      - back-tier
  web:
    depends_on:
      - 'postgres'
      - 'redis'
    image: asozontov/my_dockerized_app:v2
    expose:
      - "3000"
    networks:
      - front-tier
      - back-tier
    # volumes:
      # - '.:/my_dockerized_app'
    env_file:
      - '.env'
    environment:
      - APP_PORT=3000
      - SERVICE_NAME=web
      - SERVICE_TAGS=www

  # sidekiq:
  #   depends_on:
  #     - 'postgres'
  #     - 'redis'
  #   image: asozontov/my_dockerized_app:v1
  #   command: sidekiq -C config/sidekiq.yml.erb
  #   # volumes:
  #     # - '.:/my_dockerized_app'
  #   env_file:
  #     - '.env'
  #   networks:
  #     - front-tier
  #     - back-tier

  # cable:
  #   depends_on:
  #     - 'redis'
  #   image: asozontov/my_dockerized_app:v1
  #   command: puma -p 28080 cable/config.ru
  #   ports:
  #     - '28080:28080'
  #   # volumes:
  #     # - '.:/my_dockerized_app'
  #   env_file:
  #     - '.env'
  #   networks:
  #     - front-tier
  #     - back-tier
  #   environment:
  #     - SERVICE_NAME=cable
  #     - SERVICE_TAGS=www

volumes:
  postgres:
    driver: local
  redis:
    driver: local

networks:
  front-tier:
    driver: overlay
  back-tier:
    driver: overlay
